\ ** ficl/softwords/ficlclass.fr
\ Classes to model ficl data structures in objects
\ This is a demo!
\ John Sadler 14 Sep 1998
\
\ ** C - W O R D
\ Models a ficl word...

object subclass c-word
    c-word     ref: .link
    c-2byte    obj: .hashcode
    c-byte     obj: .flags
    c-byte     obj: .nName
    c-4byte    obj: .pName
    c-4byte    obj: .pCode
    c-4byte    obj: .param0

    \ Push word's name...
    : get-name   ( inst class -- c-addr u )
        2dup
        --> .pName --> get  -rot
        --> .nName --> get
    ;

    : next   ( inst class -- link-inst class )
        --> .link ;
        
    : info
        ." ficl word: " 
        2dup --> get-name type cr
        ." hash = "
        2dup --> .hashcode --> get x. cr
        ." flags = "
        --> .flags --> get x. cr
    ;

end-class

\ ** C - W O R D L I S T
\ Example of use:
\ get-current c-wordlist --> ref current
\ current --> info
\ current --> .hash --> info
\ current --> .hash --> next --> info

object subclass c-wordlist
	c-wordlist ref: .parent
	c-4byte    obj: .size
	c-word     ref: .hash

    : info
        2drop ." ficl wordlist " cr ;
	: push  drop  >search ;
	: pop   2drop previous ;
	: set-current   drop set-current ;
	: words   --> push  words previous ;
end-class

: named-wid  wordlist postpone c-wordlist  metaclass => ref ;


\ ** C - F I C L S T A C K
object subclass c-ficlstack
    c-4byte    obj: .nCells
    c-cellPtr  obj: .link
    c-cellPtr  obj: .sp
    c-4byte    obj: .stackBase

    : init   2drop ;
    : info   2drop
        ." ficl stack " cr ;
    : top
        --> .sp --> .addr --> prev --> get ;
end-class
